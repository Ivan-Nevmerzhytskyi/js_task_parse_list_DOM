{"version":3,"sources":["scripts/main.js"],"names":["employees","document","body","querySelectorAll","sortlist","list","sort","personA","personB","stringSalaryToNumber","dataset","salary","forEach","person","querySelector","append","string","Number","split","filter","item","includes","join","getEmployees","map","employee","name","textContent","position","age"],"mappings":";AAAA,aAmCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjCA,IAAMA,EAAgBC,EAAAA,SAASC,KAAKC,iBAAiB,OAErD,SAASC,EAASC,GAChBA,EAAKC,KAAK,SAACC,EAASC,GAClBC,OAAAA,EAAqBD,EAAQE,QAAQC,QACnCF,EAAqBF,EAAQG,QAAQC,UAGzCN,EAAKO,QAAQ,SAAAC,GACXZ,OAAAA,SAASC,KAAKY,cAAc,MAAMC,OAAOF,KAI7C,SAASJ,EAAqBO,GACrBC,OAAAA,OAAOD,EACXE,MAAM,IACNC,OAAO,SAAAC,GAAQ,MAAA,aAAaC,SAASD,KACrCE,KAAK,KAIV,SAASC,EAAalB,GACbA,OAAAA,EAAKmB,IAAI,SAAAC,GACd,MAAA,CACEC,KAAMD,EAASE,YACfC,SAAUH,EAASf,QAAQkB,SAC3BjB,OAAQc,EAASf,QAAQC,OACzBkB,IAAKJ,EAASf,QAAQmB,OAK5BzB,EAASJ,GACTuB,EAAavB","file":"main.30804d70.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = [...document.body.querySelectorAll('li')];\n\nfunction sortlist(list) {\n  list.sort((personA, personB) => (\n    stringSalaryToNumber(personB.dataset.salary)\n    - stringSalaryToNumber(personA.dataset.salary)\n  ));\n\n  list.forEach(person => (\n    document.body.querySelector('ul').append(person)\n  ));\n}\n\nfunction stringSalaryToNumber(string) {\n  return Number(string\n    .split('')\n    .filter(item => '0123456789'.includes(item))\n    .join('')\n  );\n}\n\nfunction getEmployees(list) {\n  return list.map(employee => (\n    {\n      name: employee.textContent,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    }\n  ));\n}\n\nsortlist(employees);\ngetEmployees(employees);\n"]}